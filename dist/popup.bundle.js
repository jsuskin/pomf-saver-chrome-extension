/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!******************!*\
  !*** ./popup.js ***!
  \******************/
var DEFAULT_STATUS_TEXT = 'Please navigate to <a href="https://pomf2.lain.la/" target="_blank">https://pomf2.lain.la/</a> to use this extension or log in to <a href="http://localhost:3000/" target="_blank">http://localhost:3000/</a> with your Google account to view your saved Pomf URLs.';
document.addEventListener("DOMContentLoaded", function () {
  var loginButton = document.getElementById("login");
  var logoutButton = document.getElementById("logout");
  var statusElement = document.getElementById("status");
  var marqueeElement = statusElement.querySelector("marquee");
  function updateUI(isAuthenticated) {
    loginButton.style.display = isAuthenticated ? "none" : "block";
    logoutButton.style.display = isAuthenticated ? "block" : "none";
    if (isAuthenticated) {
      chrome.tabs.query({
        active: true,
        currentWindow: true
      }, function (tabs) {
        var currentTab = tabs[0];
        if (currentTab.url === "https://pomf2.lain.la/") {
          marqueeElement.innerText = "FEED ME A STRAY CAT";
        } else {
          var pElement = document.createElement("p");
          pElement.innerHTML = DEFAULT_STATUS_TEXT;
          statusElement.replaceChild(pElement, marqueeElement);
        }
        chrome.runtime.onMessage.addListener(function (message, sender, sendResponse) {
          console.log("Popup received message:", message);
          statusElement.textContent = message.message;
          statusElement.style.color = message.success ? "green" : "red";
        });
      });
    } else {}
  }

  // Check authentication status
  chrome.storage.local.get("isAuthenticated", function (result) {
    updateUI(result.isAuthenticated);
  });

  // Add login event listener
  loginButton.addEventListener("click", function () {
    chrome.runtime.sendMessage({
      type: "start-auth"
    }, function (response) {
      if (response.success) {
        chrome.storage.local.set({
          isAuthenticated: true
        });
      }
    });
  });

  // Add sign out event listener
  logoutButton.addEventListener("click", function () {
    chrome.runtime.sendMessage({
      type: "sign-out"
    }, function (response) {
      chrome.storage.local.set({
        isAuthenticated: false
      });
    });
  });

  // Listen for changes in authentication status
  chrome.storage.onChanged.addListener(function (changes, areaName) {
    if (areaName === "local" && changes.isAuthenticated) {
      updateUI(changes.isAuthenticated.newValue);
      window.focus();
    }
  });
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RSxVQUFDQyxRQUFRLEVBQUs7TUFDN0Q3QixNQUFNLENBQUN1QixPQUFPLENBQUNDLEtBQUssQ0FBQ00sR0FBRyxDQUFDO1FBQUVqQyxlQUFlLEVBQUU7TUFBTSxDQUFDLENBQUM7SUFDdEQsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDOztFQUVGO0VBQ0FHLE1BQU0sQ0FBQ3VCLE9BQU8sQ0FBQ1EsU0FBUyxDQUFDakIsV0FBVyxDQUFDLFVBQUNrQixPQUFPLEVBQUVDLFFBQVEsRUFBSztJQUMxRCxJQUFJQSxRQUFRLEtBQUssT0FBTyxJQUFJRCxPQUFPLENBQUNuQyxlQUFlLEVBQUU7TUFDbkRELFFBQVEsQ0FBQ29DLE9BQU8sQ0FBQ25DLGVBQWUsQ0FBQ3FDLFFBQVEsQ0FBQztNQUMxQ0MsTUFBTSxDQUFDQyxLQUFLLENBQUMsQ0FBQztJQUNoQjtFQUNGLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9tZi1zYXZlci1leHRlbnNpb24vLi9wb3B1cC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBERUZBVUxUX1NUQVRVU19URVhUID1cclxuICAnUGxlYXNlIG5hdmlnYXRlIHRvIDxhIGhyZWY9XCJodHRwczovL3BvbWYyLmxhaW4ubGEvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+aHR0cHM6Ly9wb21mMi5sYWluLmxhLzwvYT4gdG8gdXNlIHRoaXMgZXh0ZW5zaW9uIG9yIGxvZyBpbiB0byA8YSBocmVmPVwiaHR0cDovL2xvY2FsaG9zdDozMDAwL1wiIHRhcmdldD1cIl9ibGFua1wiPmh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC88L2E+IHdpdGggeW91ciBHb29nbGUgYWNjb3VudCB0byB2aWV3IHlvdXIgc2F2ZWQgUG9tZiBVUkxzLic7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgY29uc3QgbG9naW5CdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvZ2luXCIpO1xyXG4gIGNvbnN0IGxvZ291dEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9nb3V0XCIpO1xyXG4gIFxyXG4gIGNvbnN0IHN0YXR1c0VsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0YXR1c1wiKTtcclxuICBjb25zdCBtYXJxdWVlRWxlbWVudCA9IHN0YXR1c0VsZW1lbnQucXVlcnlTZWxlY3RvcihcIm1hcnF1ZWVcIik7XHJcblxyXG4gIGZ1bmN0aW9uIHVwZGF0ZVVJKGlzQXV0aGVudGljYXRlZCkge1xyXG4gICAgbG9naW5CdXR0b24uc3R5bGUuZGlzcGxheSA9IGlzQXV0aGVudGljYXRlZCA/IFwibm9uZVwiIDogXCJibG9ja1wiO1xyXG4gICAgbG9nb3V0QnV0dG9uLnN0eWxlLmRpc3BsYXkgPSBpc0F1dGhlbnRpY2F0ZWQgPyBcImJsb2NrXCIgOiBcIm5vbmVcIjtcclxuXHJcbiAgICBpZiAoaXNBdXRoZW50aWNhdGVkKSB7XHJcbiAgICAgIGNocm9tZS50YWJzLnF1ZXJ5KHsgYWN0aXZlOiB0cnVlLCBjdXJyZW50V2luZG93OiB0cnVlIH0sIGZ1bmN0aW9uICh0YWJzKSB7XHJcbiAgICAgICAgY29uc3QgY3VycmVudFRhYiA9IHRhYnNbMF07XHJcblxyXG4gICAgICAgIGlmIChjdXJyZW50VGFiLnVybCA9PT0gXCJodHRwczovL3BvbWYyLmxhaW4ubGEvXCIpIHtcclxuICAgICAgICAgIG1hcnF1ZWVFbGVtZW50LmlubmVyVGV4dCA9IFwiRkVFRCBNRSBBIFNUUkFZIENBVFwiO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBjb25zdCBwRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xyXG4gICAgICAgICAgcEVsZW1lbnQuaW5uZXJIVE1MID0gREVGQVVMVF9TVEFUVVNfVEVYVDtcclxuICAgICAgICAgIHN0YXR1c0VsZW1lbnQucmVwbGFjZUNoaWxkKHBFbGVtZW50LCBtYXJxdWVlRWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjaHJvbWUucnVudGltZS5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIoXHJcbiAgICAgICAgICAobWVzc2FnZSwgc2VuZGVyLCBzZW5kUmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJQb3B1cCByZWNlaXZlZCBtZXNzYWdlOlwiLCBtZXNzYWdlKTtcclxuICAgICAgICAgICAgc3RhdHVzRWxlbWVudC50ZXh0Q29udGVudCA9IG1lc3NhZ2UubWVzc2FnZTtcclxuICAgICAgICAgICAgc3RhdHVzRWxlbWVudC5zdHlsZS5jb2xvciA9IG1lc3NhZ2Uuc3VjY2VzcyA/IFwiZ3JlZW5cIiA6IFwicmVkXCI7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgKTtcclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gQ2hlY2sgYXV0aGVudGljYXRpb24gc3RhdHVzXHJcbiAgY2hyb21lLnN0b3JhZ2UubG9jYWwuZ2V0KFwiaXNBdXRoZW50aWNhdGVkXCIsIChyZXN1bHQpID0+IHtcclxuICAgIHVwZGF0ZVVJKHJlc3VsdC5pc0F1dGhlbnRpY2F0ZWQpO1xyXG4gIH0pO1xyXG5cclxuICAvLyBBZGQgbG9naW4gZXZlbnQgbGlzdGVuZXJcclxuICBsb2dpbkJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2UoeyB0eXBlOiBcInN0YXJ0LWF1dGhcIiB9LCAocmVzcG9uc2UpID0+IHtcclxuICAgICAgaWYgKHJlc3BvbnNlLnN1Y2Nlc3MpIHtcclxuICAgICAgICBjaHJvbWUuc3RvcmFnZS5sb2NhbC5zZXQoeyBpc0F1dGhlbnRpY2F0ZWQ6IHRydWUgfSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuICAvLyBBZGQgc2lnbiBvdXQgZXZlbnQgbGlzdGVuZXJcclxuICBsb2dvdXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHsgdHlwZTogXCJzaWduLW91dFwiIH0sIChyZXNwb25zZSkgPT4ge1xyXG4gICAgICBjaHJvbWUuc3RvcmFnZS5sb2NhbC5zZXQoeyBpc0F1dGhlbnRpY2F0ZWQ6IGZhbHNlIH0pO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIC8vIExpc3RlbiBmb3IgY2hhbmdlcyBpbiBhdXRoZW50aWNhdGlvbiBzdGF0dXNcclxuICBjaHJvbWUuc3RvcmFnZS5vbkNoYW5nZWQuYWRkTGlzdGVuZXIoKGNoYW5nZXMsIGFyZWFOYW1lKSA9PiB7XHJcbiAgICBpZiAoYXJlYU5hbWUgPT09IFwibG9jYWxcIiAmJiBjaGFuZ2VzLmlzQXV0aGVudGljYXRlZCkge1xyXG4gICAgICB1cGRhdGVVSShjaGFuZ2VzLmlzQXV0aGVudGljYXRlZC5uZXdWYWx1ZSk7XHJcbiAgICAgIHdpbmRvdy5mb2N1cygpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KTtcclxuIl0sIm5hbWVzIjpbIkRFRkFVTFRfU1RBVFVTX1RFWFQiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJsb2dpbkJ1dHRvbiIsImdldEVsZW1lbnRCeUlkIiwibG9nb3V0QnV0dG9uIiwic3RhdHVzRWxlbWVudCIsIm1hcnF1ZWVFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsInVwZGF0ZVVJIiwiaXNBdXRoZW50aWNhdGVkIiwic3R5bGUiLCJkaXNwbGF5IiwiY2hyb21lIiwidGFicyIsInF1ZXJ5IiwiYWN0aXZlIiwiY3VycmVudFdpbmRvdyIsImN1cnJlbnRUYWIiLCJ1cmwiLCJpbm5lclRleHQiLCJwRWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJpbm5lckhUTUwiLCJyZXBsYWNlQ2hpbGQiLCJydW50aW1lIiwib25NZXNzYWdlIiwiYWRkTGlzdGVuZXIiLCJtZXNzYWdlIiwic2VuZGVyIiwic2VuZFJlc3BvbnNlIiwiY29uc29sZSIsImxvZyIsInRleHRDb250ZW50IiwiY29sb3IiLCJzdWNjZXNzIiwic3RvcmFnZSIsImxvY2FsIiwiZ2V0IiwicmVzdWx0Iiwic2VuZE1lc3NhZ2UiLCJ0eXBlIiwicmVzcG9uc2UiLCJzZXQiLCJvbkNoYW5nZWQiLCJjaGFuZ2VzIiwiYXJlYU5hbWUiLCJuZXdWYWx1ZSIsIndpbmRvdyIsImZvY3VzIl0sInNvdXJjZVJvb3QiOiIifQ==